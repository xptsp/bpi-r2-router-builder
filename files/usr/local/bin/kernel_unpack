#!/bin/bash
if [[ -z "$1" || ! -f "$1" ]]; then
	echo "Syntax: $(basename $0) [kernel.tgz]"
	exit 1
fi

# Remount root and boot partitions as writable:
RO=$(mount | grep "/boot" | grep "(ro,")
[[ ! -z "$RO" ]] && mount -o remount,rw /boot
ROOT=/
HAS_OVERLAY=$(router-helper has_overlay; echo $?)
[[ "${HAS_OVERLAY}" -eq 0 ]] && ROOT=/ro && router-helper mount

# Remove the old kernel modules:
rm -rf ${ROOT}/lib/modules/*

# Unpack the new kernel into the boot partition:
sudo tar -xzvf ${1} -C /boot/ --strip-components=1 BPI-BOOT

# Unpack the new kernel modules into the root partition:
sudo tar -xzvf ${1} -C ${ROOT} --strip-components=1 BPI-ROOT

# Write the current MAC address to the DTB file:
router-helper mac saved

# Remount root and boot partitons as read-only if they are before we started:
[[ "${HAS_OVERLAY}" -eq 0 ]] && router-helper umount
