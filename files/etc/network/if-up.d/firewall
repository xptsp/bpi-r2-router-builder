#!/bin/bash

# Use Receive Packet Steering (RPS) to steer incoming data from "wan" to CPUs 2 and 3:
[[ "${IFACE}" == "wan" ]] && echo 6 > /sys/class/net/${IFACE}/queues/rx-0/rps_cpus

# Use Receive Packet Steering (RPS) to steer incoming data from "br0" to CPU 4:
[[ "${IFACE}" == "br0" ]] && echo 8 > /sys/class/net/${IFACE}/queues/rx-0/rps_cpus

################################################################################################
# Are we dealing with an USER-defined interface requiring masquerading?
################################################################################################
test -f /etc/network/interfaces.d/${IFACE} && if [[ ! -z "${IF_MASQUERADE}" ]]; then
	# Add this interface to the list of WAN interfaces:
	nft add element inet firewall DEV_WAN { ${IFACE} }
	
	# Put the IP addresses of the interface in the firewall's "prerouting_private" chain.
	# This should allow double-nat configurations to work properly:
	nft insert rule inet firewall mangle_prerouting_private iifname ${IFACE} ip saddr $(ip addr show ${IFACE} | grep " inet " | awk '{print $2}') return
	nft insert rule inet firewall mangle_prerouting_private iifname ${IFACE} ip6 saddr $(ip addr show ${IFACE} | grep " inet6 " | awk '{print $2}') return
fi

################################################################################################
# Are we dealing with an USER-defined interface does not require masquerading?
################################################################################################
test -f /etc/network/interfaces.d/${IFACE} && if [[ -z "${IF_MASQUERADE}" ]]; then
	ADDR=$(ip addr show ${IFACE} | grep " inet " | awk '{print $2}')
	if [[ ! -z "${ADDR}" ]]; then
		# Put the IP address range into the firewalls "inside_network" set.
		# This should allow port triggering to work properly: 
		nft add element inet firewall INSIDE_NETWORK { ${ADDR} }

		# Add this interface to the list of LAN interfaces:
		nft add element inet firewall DEV_LAN { ${IFACE} }
	fi
fi

# Exit with a zero error code:
exit 0
