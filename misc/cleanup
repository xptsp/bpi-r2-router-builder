#!/bin/bash
if [[ "$UID" -ne 0 ]]; then
	sudo $0 $@
	exit
fi
RED='\033[1;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
NC='\033[0m'

los() {
	img="$1"
	dev="$(sudo losetup --show -f -P "$img")"
	echo "$dev"
	for part in "$dev"?*; do
		[ "$part" = "${dev}p*" ] && part="${dev}"
		dst="/mnt/$(basename "$part")"
		echo "$dst"
		sudo mkdir -p "$dst"
		sudo mount "$part" "$dst"
	done
}
losd() {
	for part in "${1}"?*; do
		if [ "${part}" = "${1}p*" ]; then
			part="${1}"
		fi
		dst="/mnt/$(basename "$part")"
		sudo umount "$dst"
		sudo rmdir "$dst"
	done
	sudo losetup -d "$1"
}

####################################################################################################
FILE="${1}"
if [[ -z "${FILE}" || ! -e "${FILE}" ]]; then
	# Assemble the list of files to display:
	count=0
	while read -r file
	do
		 options+=($((++count)) "$file")
	done <<< $(ls -r *.img*)

	# Display the dialog box:
	cmd=(dialog --keep-tite --menu "Select Image to Clean:" 22 76 16)
	CHOICE=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	[[ "$CHOICE" -eq 0 ]] && exit 0
	FILE=${options[ $(( $CHOICE * 2 - 1)) ]}
fi
echo -e "${GREEN}================================================================${NC}"
echo -e "${GREEN}NOTE:${NC} Cleaning up ${BLUE}${FILE}${NC}...."

####################################################################################################
echo -e "${GREEN}================================================================${NC}"
echo -e "${GREEN}NOTE:${NC} Mounting partitions within the image..."
DEV=($(los ${FILE}))

####################################################################################################
echo -e "${GREEN}NOTE:${NC} Extracting empty BPIWRT disk image..."
[[ "$(df /tmp | grep -v Filesystem | head -1 | awk '{print $4}')" -lt 2129921 ]] && DEST=./ || DEST=/tmp
cp $(dirname $(ls -l $0 | awk '{print $NF}'))/bpiwrt_empty.img.gz ${DEST}
gunzip -f ${DEST}/bpiwrt_empty.img.gz

####################################################################################################
echo -e "${GREEN}NOTE:${NC} Copy kernel files from partition 1..."
OUT=($(los ${DEST}/bpiwrt_empty.img))
rm ${DEV[1]}/bananapi/bpi-r2/linux/uImage >& /dev/null
rm ${DEV[1]}/*.conf >& /dev/null
FILE=${DEV[1]}/bananapi/bpi-r2/linux/dtb/bpi-r2.dtb
[[ -f ${FILE}.old ]] && mv ${FILE}.old ${FILE}
cp -aR ${DEV[1]}/* ${OUT[1]}/

####################################################################################################
echo -e "${GREEN}NOTE:${NC} Clearing the local repository of retrieved package files..."
A=${DEV[2]}
chroot ${A} $(dirname $0)/remove_files

####################################################################################################
echo -e "${GREEN}NOTE:${NC} Copy system files from partition 2..."
cp -aR ${DEV[2]}/* ${OUT[2]}/

####################################################################################################
echo -e "${GREEN}NOTE:${NC} Unmount partitions from system..."
losd ${DEV[0]}
losd ${OUT[0]}
mv ${DEST}/bpiwrt_empty.img ${FILE}

####################################################################################################
echo -e "${GREEN}================================================================${NC}"
echo -e "${GREEN}NOTE:${NC} Compressing image..."
gzip -fkv ${FILE}
echo -e "${GREEN}================================================================${NC}"
echo -e "${GREEN}SUCCESS!${NC}  Image backup completed and prepped successfully!"
