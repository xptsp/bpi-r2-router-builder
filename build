#!/bin/bash

# If we are not doing this as root, we need to change to root now!
if [[ "${UID}" -ne 0 ]]; then
	sudo $0 $@
	exit $?
fi
RED='\033[1;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
NC='\033[0m'

##############################################################################################
# Supporting functions:
##############################################################################################
function pause(){
	read -s -n 1 -p "Press any key to continue . . ."
	echo ""
}
 
function mount_chroot()
{
	mount | grep " ${target}/proc " >& /dev/null || mount --bind /proc ${target}/proc
	mount | grep " ${target}/sys " >& /dev/null || mount --bind /sys ${target}/sys
	mount | grep " ${target}/tmp " >& /dev/null || mount --bind /tmp ${target}/tmp
}

function umount_chroot()
{
	umount ${target}/tmp >& /dev/null
	umount ${target}/sys >& /dev/null
	umount ${target}/proc >& /dev/null
}

function remove_chroot()
{
	umount_chroot
	umount ${target} >& /dev/null
	rm -rf ${target} >& /dev/null
}

function enter_chroot()
{
	[[ ! -f ${target}/usr/bin/ ]] && cp /usr/bin/qemu-arm-static ${target}/usr/bin/
	cp /etc/resolv.conf ${target}/etc
	rm -rf ${target}/opt/bpiwrt-builder >& /dev/null
	cp -R ./ ${target}/opt/bpiwrt-builder
	mount_chroot
	chroot ${target} ${1}
	umount_chroot
}

##############################################################################################
# Install necessary tools for building this image:
##############################################################################################
if [[ ! -f /usr/bin/qemu-arm-static ]]; then
	echo -e "${GREEN}INFO:${NC} Installing necessary tools on this computer..."
	apt-get install -y qemu-user-static debootstrap binfmt-support
fi
distro=buster
arch=armhf
cd $(dirname $0)
target=$(dirname $PWD)/debian_${distro}_${arch}

##############################################################################################
# Loop through our menu until "Cancel" is chosen:
##############################################################################################
while :; do
	##############################################################################################
	# Decide which options to show the user:
	##############################################################################################
	if [[ ! -d "${target}" ]]; then
		CHOICES=(	"1" "Build Chroot environment" )
	else
		CHOICES=(	"1" "Rebuild Chroot environment" )
	fi
	if [[ -f "$(dirname $PWD)/${distro}.squashfs" ]]; then
		CHOICES[${#CHOICES[@]}]=2
		CHOICES[${#CHOICES[@]}]="Unpack ${distro}.squashfs"
	fi
	CHOICES[${#CHOICES[@]}]=3
	CHOICES[${#CHOICES[@]}]="Enter Chroot environment"
	if [[ -d "${target}" ]]; then
		CHOICES[${#CHOICES[@]}]=4
		CHOICES[${#CHOICES[@]}]="Pack Chroot into ${distro}.squashfs"
	fi

	##############################################################################################
	# Show the dialog box with the options we've decided on.  Exit script if they select "Cancel":
	##############################################################################################
	OPTION=$(whiptail --title "BPIWRT Builder" --menu "What do you want to do?" 15 60 4 "${CHOICES[@]}" 3>&1 1>&2 2>&3)
	[[ "$?" -gt 0 ]] && exit

	##############################################################################################
	# Do the choice that the user selected:
	##############################################################################################
	case ${OPTION} in
		1)
			remove_chroot
			mkdir ${target} >& /dev/null
			mount -t tmpfs tmpfs ${target}
			debootstrap --arch=${arch} --foreign ${distro} ${target}
			enter_chroot /opt/bpiwrt-builder/misc/stage_2
			;;

		2)
			remove_chroot
			mkdir ${target} >& /dev/null
			mount -t tmpfs tmpfs ${target}
			[[ -d /tmp/squash ]] && rm -rf /tmp/squash
			unsquashfs -d /tmp/squash $(dirname $PWD)/${distro}.squashfs
			mv /tmp/squash/* ${target}
			rm -rf /tmp/squash
			pause
			;;

		3)
			enter_chroot
			;;

		4)
			rm $(dirname $PWD)/${distro}.squashfs >& /dev/null
			mksquashfs ${target} $(dirname $PWD)/${distro}.squashfs
			pause
			;;
	esac
done
exit

